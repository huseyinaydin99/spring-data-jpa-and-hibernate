package tr.com.huseyinaydin.orderservice.domain;

import jakarta.persistence.Embedded;
import jakarta.persistence.Entity;
import jakarta.persistence.OneToMany;
import jakarta.persistence.Version;
import jakarta.validation.Valid;
import org.hibernate.validator.constraints.Length;

import java.util.LinkedHashSet;
import java.util.Set;

@Entity
public class Customer extends BaseEntity {

    @Length(max = 50)
    private String customerName;

    /*
    DoÄŸrulama (validation), verinin gÃ¼venilir ve tutarlÄ± olmasÄ±nÄ± saÄŸlamak iÃ§in doÄŸru zamanda ve doÄŸru yerde yapÄ±lmalÄ±dÄ±r.
    Backend tarafÄ±nda, veri tabanÄ±na kaydedilmeden Ã¶nce service veya repository katmanÄ±nda doÄŸrulama yapmak, hatalÄ± verinin sistemde yayÄ±lmasÄ±nÄ± Ã¶nler.
    Controller seviyesinde @Valid ile giriÅŸ verisini doÄŸrulamak, gereksiz iÅŸlem yÃ¼kÃ¼nÃ¼ azaltÄ±r ve erken hata tespiti saÄŸlar.
    Frontend tarafÄ±nda ise, kullanÄ±cÄ± deneyimini iyileÅŸtirmek iÃ§in anlÄ±k doÄŸrulama (Ã¶rneÄŸin, form alanlarÄ±nda anÄ±nda hata gÃ¶sterme) yapÄ±lmalÄ±dÄ±r.
    DoÄŸrulamanÄ±n yeri ve zamanÄ±, sistemin mimarisine ve ihtiyaÃ§larÄ±na gÃ¶re belirlenmelidir. ğŸš€
    @Valid annotation'Ä±, bir entity Ã¼zerinde belirtilen validasyon kurallarÄ±nÄ±n (Ã¶rneÄŸin, @NotNull, @Size gibi) Spring Boot tarafÄ±ndan otomatik olarak kontrol edilmesini saÄŸlar ve geÃ§ersiz veri durumunda hata fÄ±rlatÄ±r.
     */
    //@Valid
    @Embedded
    private Address address;

    @Length(max = 20)
    private String phone;
    private String email;

    @Version
    private Integer version;

    @OneToMany(mappedBy = "customer")
    private Set<OrderHeader> orders = new LinkedHashSet<>();

    public String getCustomerName() {
        return customerName;
    }

    public void setCustomerName(String customerName) {
        this.customerName = customerName;
    }

    public Address getAddress() {
        return address;
    }

    public void setAddress(Address address) {
        this.address = address;
    }

    public String getPhone() {
        return phone;
    }

    public void setPhone(String phone) {
        this.phone = phone;
    }

    public String getEmail() {
        return email;
    }

    public void setEmail(String email) {
        this.email = email;
    }

    public Set<OrderHeader> getOrders() {
        return orders;
    }

    public void setOrders(Set<OrderHeader> orders) {
        this.orders = orders;
    }

    public Integer getVersion() {
        return version;
    }

    public void setVersion(Integer version) {
        this.version = version;
    }
}